{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"WISPR Operation and Installation\"\n",
        "subtitle: \"Guidance for working with a WISPR acoustic system\"\n",
        "---\n",
        "\n",
        "\n",
        "### Useful links\n",
        "\n",
        "- [WISPR3 GitHub repository](https://github.com/embeddedocean/wispr3)\n",
        "- [agate Matlab tools](https://sfregosi.github.io/agate/)\n",
        "- [IOP logdev manual](https://iop.apl.washington.edu/iopsg/logdev.txt)\n",
        "\n",
        "\n",
        "### WISPR operation\n",
        "\n",
        "*These instructions are for the third generation WISPR3 recorder installed on a Seaglider*\n",
        "\n",
        "WISPR is configured/controlled in three places:\n",
        "\n",
        "1. Seaglider's internal memory (with a `wslog.cnf` file)\n",
        "2. Seaglider piloting `cmdfile` that can be changed during a mission\n",
        "3. WISPR3's own configuration file (`wispr.txt`) stored on the WISPR3 memory\n",
        "\n",
        "#### 1. Configure WISPR as logger on Seaglider\n",
        "\n",
        "A `wslog.cnf` logger configuration file manages how the Seaglider communicates with and controls WISPR as a 'logger' device. This file can contain a variety of commands outlined in detail in the [IOP logdev manual](https://iop.apl.washington.edu/iopsg/logdev.txt). This file is loaded durinng initial WISPR installation and otherwise should not need to be modified unless the WISPR hardware or software is changed. \n",
        "\n",
        "The exact contents of this file (the amount of pauses and warmups) appears to be sensitive to changes in WISPR3 firmware so thorough testing is required after updating any firmware. Through testing, the below file should operate a *WISPR3 running firmware v1.2.20250829 without a real-time system*. \n",
        "\n",
        "\n",
        "```{default}\n",
        "name=WISPR\n",
        "prefix=ws\n",
        "cmdprefix=$WS_\n",
        "baud=9600\n",
        "voltage=10\n",
        "current=.0592\n",
        "warmup=15000\n",
        "timeout=7000\n",
        "prompt=W>\n",
        "datatype=z\n",
        "start=\"%{$TME,%s*ff}%r%9%9%9%9$RUN*ee%r%9%9%9%9%9%9\"\n",
        "stop=\"$EXI*a6%r%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9%9\"\n",
        "```\n",
        "\n",
        "\n",
        "This file can be found in the `standard_files` folder as [`wslog_sg680_20250829_sim_dives.cnf`](https://github.com/noaa-pifsc/glider-lab/tree/main/standard_files). \n",
        "\n",
        "\n",
        "#### 2. Control WISPR operation via `cmdfile` (during mission)\n",
        "\n",
        "Four parameters in the `cmdfile` control WISPR operation. These are typically set once at the start of a mission and should only be changed if the sampling scheme needs to be changed. \n",
        "\n",
        "\n",
        "```{default}\n",
        "\n",
        "$WS_RECORDABOVE,-10.0   # depth at which WISPR will record, 0 will never record\n",
        "$WS_PROFILE,3.0         # which profiles to record (1-descent, 2-ascent, 3-both)\n",
        "$WS_XMITPROFILE,3.0     # which profiles to transmit (1-descent, 2-ascent, 3-both)\n",
        "$WS_UPLOADMAX,100.0     # max upload size (in ?? bytes)\n",
        "```\n",
        "\n",
        "\n",
        "In this example WISPR will turn on and record at all depths below 10 m, on both descents and ascents, will transmit data back for both profiles (only relevant with a real-time system), and transmitted files will not be bigger than 100 bytes.\n",
        "\n",
        "For `$WS_RECORDABOVE` a positive value indicates to sampling shallower than the specified depth (e.g., setting to 500 will record at depths from 0 to 500 m) and a negative value indicates to sample below the specified depth (e.g., setting to -20 will record at all depths below 20 m). \n",
        "\n",
        "Pseudo-parameters that are reported in the `logfile`:\n",
        "\n",
        "```{default}\n",
        "$WS_STARTS,0.0          # pseudo-parameter, number of starts is reported in `logfile`\n",
        "$WS_NDIVE,1.0           # ?? psuedo-parameter\n",
        "```\n",
        "\n",
        "\n",
        "#### 3. Configure WISPR3 acoustic sampling settings\n",
        "\n",
        "The WISPR system's recording settings (sample rate, file duration, gain, etc.) are set using a `wispr.txt` configuration file that is loaded onto the WISPR3 memory (microSD) or set manually through direct serial communications with the WISPR3. If no `wispr.txt` is present, a default file will be created when WISPR3 powers on. Detailed descriptions of each input can be found in the [WISPR3 File Formats Manual](https://github.com/embeddedocean/wispr3/blob/main/Docs/wispr3_file_format.pdf).\n",
        "\n",
        "A file with the desired settings and the sensor and platform IDs should be loaded onto both microSD cards before a mission; a copy of what was loaded should be saved with the date. Below is an example file that will record 120 second files at a 200 kHz sampling rate and 24-bit resolution with no additional system gain. \n",
        "\n",
        "\n",
        "```{default}\n",
        "WISPR 3.0 configuration\n",
        "sensor_id: 2402\n",
        "platform_id: SG680\n",
        "start_state: 2\n",
        "start_mode: 3\n",
        "glider_mode: 0\n",
        "adc_type: LTC2512\n",
        "adc_sample_size: 3\n",
        "adc_sampling_rate: 200000\n",
        "adc_channels: 1\n",
        "adc_gain: 0\n",
        "adc_decimation: 4\n",
        "adc_timestamp: 0\n",
        "secs_per_file: 120\n",
        "max_file_size: 204800\n",
        "run_time: 0\n",
        "duty_cycle: 0\n",
        "debug_level: 1\n",
        "fft_size: 512\n",
        "fft_overlap: 0\n",
        "fft_window_type: 0\n",
        "rtc_aging: 0\n",
        "rtc_freq: 32767\n",
        "msg_baud: 9600\n",
        "msg_termination: 13\n",
        "msg_handshake: 0\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "### WISPR hardware installation\n",
        "\n",
        "### Glider operational and environmental data processing\n",
        "\n",
        "These data processing steps will generally follow the [Post-mission processing](https://sfregosi.github.io/agate/mission-processing.html) steps outlined in the _**agate**_ documentation. \n",
        "\n",
        "*More to come soon...*\n",
        "\n",
        "### Passive acoustic data processing\n",
        "\n",
        "See excellent protocols and information on the NMFS PAM-Glider site: [Analysis Methods > Acoustic Data Pre-Processing](https://nmfs-ost.github.io/PAM-Glider/content/data_processing/AcousticData-preprocessing.html)\n",
        "\n",
        "Specifically, the [Seaglider - WISPR](https://nmfs-ost.github.io/PAM-Glider/content/data_processing/seaglider-wispr.html) instructions will apply to the PIFSC Seagliders. \n"
      ],
      "id": "a0fa158d"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}